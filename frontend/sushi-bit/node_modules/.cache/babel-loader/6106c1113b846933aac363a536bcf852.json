{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python39\\\\files\\\\sushi_bit\\\\frontend\\\\sushi-bit\\\\src\\\\component\\\\Register.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; //a react function component used for the register page\n\nexport default function Register(props) {\n  /*\r\n   *usernamesate contain the current value that the user entered to the filed\r\n   *passwordstate is the same as the usernamestate but for the password\r\n   *setUsername is the hook to change the username\r\n   *setUsername is the hook to change the password\r\n   */\n  const [usernameState, setUsername] = useState(\"\");\n  const [passwordState, setPassword] = useState(\"\");\n  useEffect(() => {\n    if (props.userData.isInDB) {\n      console.log(\"b\");\n      localStorage.setItem(\"sushi-bit-user\", JSON.stringify(props.userData));\n      props.setUserdata({ ...props.userData,\n        isInDB: false\n      });\n    }\n  }); //updating the usernameState every time the user enter somthing to the username filed\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  }; //updating the usernameState every time the user enter somthing to the username filed\n\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  }; //an event to be triggered every time the user submit the form\n\n\n  const formSubmit = async e => {\n    //prevent the auto send\n    e.preventDefault(); //check if the user is already logged in\n\n    if (props.loginStatus === \"You are logged in\" || props.loginStatus === \"You already logged in\") {\n      props.setLoginStatus(\"You already logged in\"); //form validation\n    } else if (!usernameState) {\n      props.setLoginStatus(\"Username is empty\"); //form validation\n    } else if (!passwordState) {\n      props.setLoginStatus(\"password is empty\");\n    } else {\n      //the data that will be send for the backends w\n      const postData = {\n        username: usernameState,\n        password: passwordState,\n        money: 0\n      }; //making the request using axios\n\n      const res = await Axios.post(\"/api/register\", postData);\n      const data = res.data; //check the status of the response and later to choose the login ststus\n\n      if (res.status === 200) {\n        if (!data.login) {\n          props.setLoginStatus(\"there is already a user with the given username\");\n        } else {\n          props.setUserdata({\n            username: data.name,\n            password: passwordState,\n            money: 0,\n            isInDB: true\n          });\n          props.setLoginStatus(\"You have registered sucssesfully You are logged in\");\n        }\n      } else {\n        props.setLoginStatus(\"An internal server error has been occur please try again\");\n      }\n    }\n  }; //the jsx to be presented on the screen later\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    // @ts-ignore\n    className: \"formdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      alignSelf: \"center\",\n      order: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmit // @ts-ignore\n    ,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    className: \"input\",\n    placeholder: \"Enter Username ...\",\n    style: {\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\"\n    },\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"input\",\n    placeholder: \"Enter Password ...\",\n    style: {\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\"\n    },\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"btn\",\n    style: {\n      paddingTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Python39/files/sushi_bit/frontend/sushi-bit/src/component/Register.js"],"names":["React","useState","useEffect","Axios","Register","props","usernameState","setUsername","passwordState","setPassword","userData","isInDB","console","log","localStorage","setItem","JSON","stringify","setUserdata","onChangeUsername","e","target","value","onChangePassword","formSubmit","preventDefault","loginStatus","setLoginStatus","postData","username","password","money","res","post","data","status","login","name","alignSelf","order","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n//a react function component used for the register page\r\n\r\nexport default function Register(props) {\r\n  /*\r\n   *usernamesate contain the current value that the user entered to the filed\r\n   *passwordstate is the same as the usernamestate but for the password\r\n   *setUsername is the hook to change the username\r\n   *setUsername is the hook to change the password\r\n   */\r\n  const [usernameState, setUsername] = useState(\"\");\r\n  const [passwordState, setPassword] = useState(\"\");\r\n\r\n  useEffect(() =>{\r\n    if (props.userData.isInDB){\r\n      console.log(\"b\");\r\n      localStorage.setItem(\r\n        \"sushi-bit-user\",\r\n        JSON.stringify(props.userData));\r\n        props.setUserdata({\r\n          ...props.userData,\r\n          isInDB :false,\r\n        });\r\n    }\r\n  });\r\n\r\n  //updating the usernameState every time the user enter somthing to the username filed\r\n  const onChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  //updating the usernameState every time the user enter somthing to the username filed\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  //an event to be triggered every time the user submit the form\r\n  const formSubmit = async (e) => {\r\n    //prevent the auto send\r\n    e.preventDefault();\r\n\r\n    //check if the user is already logged in\r\n    if (\r\n      props.loginStatus === \"You are logged in\" ||\r\n      props.loginStatus === \"You already logged in\"\r\n    ) {\r\n      props.setLoginStatus(\"You already logged in\");\r\n      //form validation\r\n    } else if (!usernameState) {\r\n      props.setLoginStatus(\"Username is empty\");\r\n      //form validation\r\n    } else if (!passwordState) {\r\n      props.setLoginStatus(\"password is empty\");\r\n    } else {\r\n      //the data that will be send for the backends w\r\n      const postData = {\r\n        username: usernameState,\r\n        password: passwordState,\r\n        money: 0,\r\n      };\r\n      //making the request using axios\r\n      const res = await Axios.post(\"/api/register\", postData);\r\n      const data = res.data;\r\n\r\n\r\n      //check the status of the response and later to choose the login ststus\r\n      if (res.status === 200) {\r\n        if (!data.login) {\r\n          props.setLoginStatus(\r\n            \"there is already a user with the given username\"\r\n          );\r\n        } else {\r\n          props.setUserdata({\r\n            username:data.name,\r\n            password:passwordState,\r\n            money:0,\r\n            isInDB: true\r\n          });\r\n          props.setLoginStatus(\r\n            \"You have registered sucssesfully You are logged in\"\r\n          );\r\n        }\r\n      } else {\r\n        props.setLoginStatus(\r\n          \"An internal server error has been occur please try again\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //the jsx to be presented on the screen later\r\n  return (\r\n    <div\r\n      // @ts-ignore\r\n      className=\"formdiv\"\r\n    >\r\n      <h1 style={{ alignSelf: \"center\", order: 1 }}>Register</h1>\r\n      <form\r\n        onSubmit={formSubmit}\r\n        // @ts-ignore\r\n        className=\"form\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          className=\"input\"\r\n          placeholder=\"Enter Username ...\"\r\n          style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}\r\n          onChange={onChangeUsername}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          className=\"input\"\r\n          placeholder=\"Enter Password ...\"\r\n          style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}\r\n          onChange={onChangePassword}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n          className=\"btn\"\r\n          style={{ paddingTop: \"5px\" }}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}