{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python39\\\\files\\\\sushi_bit\\\\frontend\\\\sushi-bit\\\\src\\\\component\\\\BuyMoney.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function BuyMoney(props) {\n  /**\r\n   * a react function compunent for the transfer money page\r\n   * use get request so the client will be abels to preform xss\r\n   *\r\n   * params -> userTo - a state that contain the user to send the money to\r\n   *           amount - the amount state that contains the amount to transfer\r\n   *           status - the transfer status\r\n   *\r\n   */\n  const [amount, setAmount] = useState(0);\n  const [status, setStatus] = useState(props.userData.username ? \"\" : \"You need to be loggedin\");\n  useEffect(() => {\n    if (props.userData.isInDB) {\n      localStorage.setItem(\"sushi-bit-user\", JSON.stringify(props.userData));\n      props.setUserdata({ ...props.userData,\n        isInDB: false\n      });\n    }\n  }); //a fuction that will be activated every time the user change the amount filed\n\n  const onChange = e => {\n    setAmount(e.target.value);\n  }; //a function that will be activated when the user submit the form \n\n\n  const onSubmit = async e => {\n    e.preventDefault(); //check if the user is logged in yet\n\n    if (props.userData.username) {\n      //check if the amount is a positive number\n      if (!isNaN(amount) && amount > 0) {\n        //the data that will be sent to the server\n        const postData = {\n          username: props.userData.username,\n          amount: amount\n        }; //the api request\n\n        const res = await axios.post(\"/api/BuyMoney\", postData);\n        const data = res.data; //check if the money added\n\n        if (data.transferd) {\n          const new_amount = props.userData.money + parseInt(amount); //change the data\n\n          props.setUserdata({ ...props.userData,\n            money: new_amount,\n            isInDB: T\n          });\n          setStatus(\"money added\");\n        } else {\n          setStatus(\"Somthing went wrong, could not buy money\");\n        }\n      } else {\n        setStatus(\"money cant be string or negative \");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Enter amount\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"amount\",\n    className: \"input\",\n    placeholder: \"Enter Amount ...\",\n    style: {\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\"\n    },\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Buy\",\n    className: \"btn\",\n    style: {\n      paddingTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), status);\n}","map":{"version":3,"sources":["C:/Python39/files/sushi_bit/frontend/sushi-bit/src/component/BuyMoney.js"],"names":["React","useState","useEffect","axios","BuyMoney","props","amount","setAmount","status","setStatus","userData","username","isInDB","localStorage","setItem","JSON","stringify","setUserdata","onChange","e","target","value","onSubmit","preventDefault","isNaN","postData","res","post","data","transferd","new_amount","money","parseInt","T","paddingTop","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC;;;;;;;;;AASA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAClCI,KAAK,CAACK,QAAN,CAAeC,QAAf,GAA0B,EAA1B,GAA+B,yBADG,CAApC;AAIAT,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIG,KAAK,CAACK,QAAN,CAAeE,MAAnB,EAA0B;AACxBC,MAAAA,YAAY,CAACC,OAAb,CACE,gBADF,EAEEC,IAAI,CAACC,SAAL,CAAeX,KAAK,CAACK,QAArB,CAFF;AAGEL,MAAAA,KAAK,CAACY,WAAN,CAAkB,EAChB,GAAGZ,KAAK,CAACK,QADO;AAEhBE,QAAAA,MAAM,EAAE;AAFQ,OAAlB;AAIH;AACF,GAVQ,CAAT,CAfsC,CA4BtC;;AACA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACtBZ,IAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD,CA7BsC,CAgCtC;;;AACA,QAAMC,QAAQ,GAAG,MAAOH,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACI,cAAF,GAD4B,CAE5B;;AACA,QAAIlB,KAAK,CAACK,QAAN,CAAeC,QAAnB,EAA6B;AAC3B;AACA,UAAI,CAACa,KAAK,CAAClB,MAAD,CAAN,IAAkBA,MAAM,GAAG,CAA/B,EAAkC;AAChC;AACA,cAAMmB,QAAQ,GAAG;AACfd,UAAAA,QAAQ,EAAEN,KAAK,CAACK,QAAN,CAAeC,QADV;AAEfL,UAAAA,MAAM,EAAEA;AAFO,SAAjB,CAFgC,CAMhC;;AACA,cAAMoB,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,eAAX,EAA4BF,QAA5B,CAAlB;AACA,cAAMG,IAAI,GAAGF,GAAG,CAACE,IAAjB,CARgC,CAShC;;AACA,YAAIA,IAAI,CAACC,SAAT,EAAoB;AAClB,gBAAMC,UAAU,GAAGzB,KAAK,CAACK,QAAN,CAAeqB,KAAf,GAAuBC,QAAQ,CAAC1B,MAAD,CAAlD,CADkB,CAElB;;AACAD,UAAAA,KAAK,CAACY,WAAN,CAAkB,EAChB,GAAGZ,KAAK,CAACK,QADO;AAEhBqB,YAAAA,KAAK,EAAED,UAFS;AAGhBlB,YAAAA,MAAM,EAAEqB;AAHQ,WAAlB;AAKAxB,UAAAA,SAAS,CAAC,aAAD,CAAT;AACD,SATD,MASO;AACLA,UAAAA,SAAS,CAAC,0CAAD,CAAT;AACD;AACF,OAtBD,MAsBO;AACLA,QAAAA,SAAS,CAAC,mCAAD,CAAT;AACD;AACF;AACF,GA/BD;;AAiCA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,IAAA,QAAQ,EAAEa,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,WAAW,EAAC,kBAJd;AAKE,IAAA,KAAK,EAAE;AAAEY,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,aAAa,EAAE;AAApC,KALT;AAME,IAAA,QAAQ,EAAEjB,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAU,EAAE;AAAd,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFF,EAkBG1B,MAlBH,CADF;AAsBD","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function BuyMoney(props) {\r\n  /**\r\n   * a react function compunent for the transfer money page\r\n   * use get request so the client will be abels to preform xss\r\n   *\r\n   * params -> userTo - a state that contain the user to send the money to\r\n   *           amount - the amount state that contains the amount to transfer\r\n   *           status - the transfer status\r\n   *\r\n   */\r\n  const [amount, setAmount] = useState(0);\r\n  const [status, setStatus] = useState(\r\n    props.userData.username ? \"\" : \"You need to be loggedin\"\r\n  );\r\n\r\n  useEffect(() =>{\r\n    if (props.userData.isInDB){\r\n      localStorage.setItem(\r\n        \"sushi-bit-user\",\r\n        JSON.stringify(props.userData));\r\n        props.setUserdata({\r\n          ...props.userData,\r\n          isInDB :false,\r\n        });\r\n    }\r\n  });\r\n\r\n\r\n  //a fuction that will be activated every time the user change the amount filed\r\n  const onChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n  //a function that will be activated when the user submit the form \r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //check if the user is logged in yet\r\n    if (props.userData.username) {\r\n      //check if the amount is a positive number\r\n      if (!isNaN(amount) && amount > 0) {\r\n        //the data that will be sent to the server\r\n        const postData = {\r\n          username: props.userData.username,\r\n          amount: amount,\r\n        };\r\n        //the api request\r\n        const res = await axios.post(\"/api/BuyMoney\", postData);\r\n        const data = res.data;\r\n        //check if the money added\r\n        if (data.transferd) {\r\n          const new_amount = props.userData.money + parseInt(amount);\r\n          //change the data\r\n          props.setUserdata({\r\n            ...props.userData,\r\n            money: new_amount,\r\n            isInDB: T\r\n          });\r\n          setStatus(\"money added\");\r\n        } else {\r\n          setStatus(\"Somthing went wrong, could not buy money\");\r\n        }\r\n      } else {\r\n        setStatus(\"money cant be string or negative \");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Enter amount</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"amount\"\r\n          className=\"input\"\r\n          placeholder=\"Enter Amount ...\"\r\n          style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Buy\"\r\n          className=\"btn\"\r\n          style={{ paddingTop: \"5px\" }}\r\n        />\r\n      </form>\r\n      {status}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}