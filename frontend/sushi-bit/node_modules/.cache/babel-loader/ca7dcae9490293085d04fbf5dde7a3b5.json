{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python39\\\\files\\\\sushi_bit\\\\frontend\\\\sushi-bit\\\\src\\\\component\\\\TransferMoney.js\";\n// @ts-ignore\nimport Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nexport default function TransferMoney(props) {\n  /**\r\n   * a react function compunent for the transfer money page\r\n   * use get request so the client will be abels to preform xss\r\n   *\r\n   * params -> userTo - a state that contain the user to send the money to\r\n   *           amount - the amount state that contains the amount to transfer\r\n   *           status - the transfer status\r\n   *\r\n   */\n  const [userTo, setUserto] = useState(\"\");\n  const [amount, setamount] = useState(0);\n  const [status, setStatus] = useState(localStorage.getItem(\"sushi-bit-user\") ? \"\" : \"You need to be loggedin\");\n  const [toSave, setTosave] = useState(false);\n  useEffect(() => {\n    if (toSave) {\n      localStorage.setItem(\"sushi-bit-user\", JSON.stringify(props.userData));\n      props.setUserdata({ ...props.userData\n      });\n      setTosave(false);\n    }\n  }, [toSave, props]); //a function that will change the status every time the user type somthing to the user filed\n\n  const onChangeUser = e => {\n    setUserto(e.target.value);\n  }; //a function that will change the status every time the user type somthing to the amount filed\n\n\n  const onChangeAmount = e => {\n    setamount(e.target.value);\n  }; //a function to prosses when the user dubmit the form\n\n\n  const onSubmit = async e => {\n    e.preventDefault(); //check if the user is connected\n\n    if (props.userData.username) {\n      //check if the amount is a positive number\n      if (!isNaN(amount) && amount > 0) {\n        //the api request that is vonerbole to xss\n        const res = await Axios.get(`/api/TransferMoney/${userTo}/${amount}`);\n        const data = res.data; //check if the money is transfered\n\n        if (data.transferd) {\n          const new_amount = props.userData.money - parseInt(amount); //change the status\n\n          props.setUserdata({ ...props.userData,\n            money: new_amount\n          });\n          setTosave(true);\n          setStatus(\"Money Transfered sucssesfoly\");\n        } else {\n          setStatus(\"Cant trnsfer money\");\n        }\n      }\n    } else {\n      setStatus(\"money cant be string or negative \");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Enter amount\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"UserTo\",\n    className: \"input\",\n    placeholder: \"Enter usrer to send money to ...\",\n    style: {\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\"\n    },\n    onChange: onChangeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"amount\",\n    className: \"input\",\n    placeholder: \"Enter Amount ...\",\n    style: {\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\"\n    },\n    onChange: onChangeAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Transfer\",\n    className: \"btn\",\n    style: {\n      paddingTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), status);\n}","map":{"version":3,"sources":["C:/Python39/files/sushi_bit/frontend/sushi-bit/src/component/TransferMoney.js"],"names":["Axios","React","useState","useEffect","TransferMoney","props","userTo","setUserto","amount","setamount","status","setStatus","localStorage","getItem","toSave","setTosave","setItem","JSON","stringify","userData","setUserdata","onChangeUser","e","target","value","onChangeAmount","onSubmit","preventDefault","username","isNaN","res","get","data","transferd","new_amount","money","parseInt","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["// @ts-ignore\r\nimport Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport default function TransferMoney(props) {\r\n  /**\r\n   * a react function compunent for the transfer money page\r\n   * use get request so the client will be abels to preform xss\r\n   *\r\n   * params -> userTo - a state that contain the user to send the money to\r\n   *           amount - the amount state that contains the amount to transfer\r\n   *           status - the transfer status\r\n   *\r\n   */\r\n  const [userTo, setUserto] = useState(\"\");\r\n  const [amount, setamount] = useState(0);\r\n  const [status, setStatus] = useState(\r\n    localStorage.getItem(\"sushi-bit-user\") ? \"\" : \"You need to be loggedin\"\r\n  );\r\n  const [toSave, setTosave] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (toSave) {\r\n      localStorage.setItem(\"sushi-bit-user\", JSON.stringify(props.userData));\r\n      props.setUserdata({\r\n        ...props.userData,\r\n      });\r\n      setTosave(false);\r\n    }\r\n  },[toSave, props]);\r\n\r\n  //a function that will change the status every time the user type somthing to the user filed\r\n  const onChangeUser = (e) => {\r\n    setUserto(e.target.value);\r\n  };\r\n\r\n  //a function that will change the status every time the user type somthing to the amount filed\r\n  const onChangeAmount = (e) => {\r\n    setamount(e.target.value);\r\n  };\r\n\r\n  //a function to prosses when the user dubmit the form\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //check if the user is connected\r\n    if (props.userData.username) {\r\n      //check if the amount is a positive number\r\n      if (!isNaN(amount) && amount > 0) {\r\n        //the api request that is vonerbole to xss\r\n        const res = await Axios.get(`/api/TransferMoney/${userTo}/${amount}`);\r\n        const data = res.data;\r\n        //check if the money is transfered\r\n        if (data.transferd) {\r\n          const new_amount = props.userData.money - parseInt(amount);\r\n          //change the status\r\n          props.setUserdata({\r\n            ...props.userData,\r\n            money: new_amount,\r\n          });\r\n          setTosave(true);\r\n          setStatus(\"Money Transfered sucssesfoly\");\r\n        } else {\r\n          setStatus(\"Cant trnsfer money\");\r\n        }\r\n      }\r\n    } else {\r\n      setStatus(\"money cant be string or negative \");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Enter amount</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"UserTo\"\r\n          className=\"input\"\r\n          placeholder=\"Enter usrer to send money to ...\"\r\n          style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}\r\n          onChange={onChangeUser}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"amount\"\r\n          className=\"input\"\r\n          placeholder=\"Enter Amount ...\"\r\n          style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}\r\n          onChange={onChangeAmount}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Transfer\"\r\n          className=\"btn\"\r\n          style={{ paddingTop: \"5px\" }}\r\n        />\r\n      </form>\r\n      {status}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}